<?xml version="1.0" encoding="UTF-8"?>
<!-- Cleanup of MODS generated by form. Apply this xslt before storing MODS in datastream. -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.loc.gov/mods/v3" xmlns:mods="http://www.loc.gov/mods/v3" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="mods">
	<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" media-type="text/xml"/>
	<!-- copy everything -->
	<xsl:template match="@*|node()"><xsl:copy><xsl:apply-templates select="@*|node()"/></xsl:copy></xsl:template>
	<!-- normalize spaces in text -->
	<xsl:template match="text()"><xsl:value-of select="normalize-space(.)"/></xsl:template>
	<!-- restore missing prefix in attribute xlink:href (empty or default values are already taken care of by template of parent element) -->
	<xsl:template match="@xlink:href">
		<xsl:variable name="h" select="normalize-space(.)"/>
		<xsl:variable name="p" select="substring-before($h,':')"/>
		<xsl:attribute name="xlink:href">
			<xsl:choose>
				<xsl:when test="$p='po' or $p='gn' or $p='aat' or $p='building' or $p='http' or $p='https'"/>
				<xsl:when test="../@xlink:arcrole">po:</xsl:when>
				<xsl:when test="../@xlink:title='geonames'">gn:</xsl:when>
				<xsl:when test="../@xlink:title='aat'">aat:</xsl:when>
				<xsl:when test="../@xlink:title='building'">building:</xsl:when>
				<xsl:when test="../@xlink:title='website'">http://</xsl:when>
			</xsl:choose>
			<xsl:value-of select="$h"/>
		</xsl:attribute>
	</xsl:template>
	<!-- replace empty value of @xlink:type by 'simple' -->
	<xsl:template match="@xlink:type[.='']"><xsl:attribute name="xlink:type">simple</xsl:attribute></xsl:template>
	<!-- mods elements need special treatment - see below -->
	<xsl:template match="mods:*"><xsl:call-template name="modsElement"/></xsl:template>
	<!-- remove mods elements without text nodes in itself or descendants -->
	<xsl:template match="mods:*[normalize-space(.)='']" priority="1"/>
	<!-- but keep if there is a real xlink (not empty or default value) -->
	<xsl:template match="/mods:mods/mods:*[@xlink:href]" priority="2">
		<xsl:variable name="h" select="normalize-space(@xlink:href)"/>
		<xsl:if test="not($h='' or $h='po:' or $h='gn:' or $h='aat:' or $h='building:' or $h='http://')"><xsl:call-template name="modsElement"/></xsl:if>
	</xsl:template>
	<!-- sort children of root mods element, add schema location -->
	<xsl:template match="/mods:mods">
		<mods version="3.4" xsi:schemaLocation="http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-4.xsd">
			<xsl:for-each select="*">
				<xsl:sort select="name()"/>
				<xsl:sort select="@xlink:title"/>
				<xsl:apply-templates select="."/>
			</xsl:for-each>
		</mods>
	</xsl:template>
	<!-- sort children of location -->
	<xsl:template match="mods:location">
		<location>
			<xsl:apply-templates select="@*"/>
			<xsl:apply-templates select="mods:physicalLocation"/>
			<xsl:apply-templates select="mods:shelfLocator"/>
			<xsl:apply-templates select="mods:url"/>
			<xsl:apply-templates select="mods:holdingSimple"/>
			<xsl:apply-templates select="mods:holdingExternal"/>
		</location>
	</xsl:template>
	<!-- sort children of cartographics -->
	<xsl:template match="mods:cartographics">
		<cartographics>
			<xsl:apply-templates select="@*"/>
			<xsl:apply-templates select="mods:scale"/>
			<xsl:apply-templates select="mods:projection"/>
			<xsl:apply-templates select="mods:coordinates"/>
		</cartographics>
	</xsl:template>
	<!-- copy mods element without mods: prefixed namespace declaration from source -->
	<xsl:template name="modsElement"><xsl:element name="{local-name()}"><xsl:apply-templates select="@*|node()"/></xsl:element></xsl:template>
</xsl:stylesheet>